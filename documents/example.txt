seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git add index.html

seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        documents/


seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git add documents

seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   documents/Usando el control de versiones  GIT.docx
        new file:   documents/git_config.txt
        new file:   index.html


seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git add -A

seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   documents/Usando el control de versiones  GIT.docx
        new file:   documents/git_config.txt
        new file:   index.html


seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git commit -m "Primer Commit con Git"
[master (root-commit) a3ef145] Primer Commit con Git
 3 files changed, 47 insertions(+)
 create mode 100644 documents/Usando el control de versiones  GIT.docx
 create mode 100644 documents/git_config.txt
 create mode 100644 index.html

seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git status
On branch master
nothing to commit, working tree clean

seblopez@BAI-442NRC2 MINGW64 ~/Desktop/Git (master)
$ git log
commit dd0ed666d55e04cdd49f432012f51f5de48bb31e (HEAD -> master)
Author: Sebastian Lopez <lopez.sebastiann.alberto@gmail.com>
Date:   Tue Sep 26 13:15:29 2017 -0300

    Se agrego un parrafo y se cambiaron los estilos del mismo

commit 4d5743d131db1328700c142fb807b0906c17250d
Author: Sebastian Lopez <lopez.sebastiann.alberto@gmail.com>
Date:   Tue Sep 26 13:05:54 2017 -0300

    Tercer Commit

commit 5506734eab3c6dcc07f552661b000fde30b51759
Author: Sebastian Lopez <lopez.sebastiann.alberto@gmail.com>
Date:   Tue Sep 26 12:53:48 2017 -0300

    Segundo Commit

commit a3ef14529ed30c68101a005f926ed1215d510c05
Author: Sebastian Lopez <lopez.sebastiann.alberto@gmail.com>
Date:   Tue Sep 26 12:48:02 2017 -0300

    Primer Commit con Git

	
	

	
	
$ git help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
